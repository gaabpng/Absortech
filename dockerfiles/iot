# ─── build stage ───────────────────────────────────────────────────────────────
FROM python:3.12-slim AS builder
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1
WORKDIR /app

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        libpq-dev \
        gcc \
        pkg-config \
        default-libmysqlclient-dev \
    && rm -rf /var/lib/apt/lists/*

COPY iot/requirements.txt .
RUN pip install --upgrade pip && \
    pip wheel --no-cache-dir -r requirements.txt -w /wheels

# ─── runtime stage ─────────────────────────────────────────────────────────────
FROM python:3.12-slim AS runtime

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_SETTINGS_MODULE=DjangoAbsortech.settings

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libpq5 \
        libmariadb3 \
    && rm -rf /var/lib/apt/lists/*

RUN adduser --disabled-password --gecos '' iotuser

WORKDIR /app

COPY --from=builder /wheels /wheels
RUN pip install --no-cache-dir /wheels/* && rm -rf /wheels

# Copy backend for Django models access
COPY backend/ /app/backend
# Copy IoT service files
COPY iot/ /app/iot

RUN chown -R iotuser:iotuser /app

USER iotuser
WORKDIR /app

CMD ["python", "iot/main.py"]
